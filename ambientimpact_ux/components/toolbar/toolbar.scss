// -----------------------------------------------------------------------------
//   Ambient.Impact - UX - Drupal administrative toolbar component
// -----------------------------------------------------------------------------

@use 'immerse';
@use 'link/link.state' as link-state;
@use 'sass:list';
@use 'sass/helpers/transition';
@use '_toolbar' as *;

///
/// Toolbar tray contents stacking order.
///
/// Ordered from lowest z-index to highest.
///
$toolbar-tray-contents-stacking-order: content, top-shadow;

.toolbar {
  // Hide when in immerse mode.
  @include immerse.hide-on-immerse;

  // Transition properties for going in and out of immerse mode.
  transition-property:        opacity;
  transition-duration:        200ms;
  transition-timing-function: linear;

  .toolbar-icon,
  // Menu links in trays other than the "Manage" tray don't have the
  // .toolbar-icon class applied to them, so we have to target them directly.
  :link {
    @include transition.fade-base;

    @include link-state.highlight {
      @include transition.fade-active;
    }
  }
}

.toolbar .toolbar-tab > .toolbar-icon {
  // Required for the current tab indicator.
  position: relative;
}

// This adds a slight shadow along the top of trays so that the current tab
// indicator contrasts against the tray, as they're both the same colour. It
// also gives the tray a sense of being attached to but coming out from under
// the tab bar.
.toolbar .toolbar-tray::before {
  content: '';

  position: absolute;

  top: -1em;
  left: 0;
  right: 0;

  z-index: list.index($toolbar-tray-contents-stacking-order, top-shadow);

  height: 1em;

  box-shadow: 0 0 3px 2px rgba(0, 0, 0, 0.25);
}

// This is required to ensure the above top shadow is placed over the tray
// contents, not under.
.toolbar .toolbar-lining {
    z-index: list.index($toolbar-tray-contents-stacking-order, content);
}

// Borders between vertical tray items. Unlike the default Toolbar CSS, this
// works for both the Manage menu and other menus.
.toolbar .toolbar-tray-vertical .toolbar-menu {
  .menu-item.level-1 + .menu-item,
  li:not(.menu-item) + li a:not(.toolbar-icon) {
    border-top: $toolbar-tray-item-border;
  }
  .menu-item.level-1:last-child,
  li:not(.menu-item):last-child a:not(.toolbar-icon) {
    border-bottom: $toolbar-tray-item-border;
  }
}

// Set the toolbar expand/collapse handles to a width equal to their height, as
// they're awkwardly wide by default.
.toolbar .toolbar-icon.toolbar-icon.toolbar-handle {
  // This seems to be exactly the equal to the height.
  width: 3em;

  // This centre-aligns the icon.
  &::before {
    left: 50%;
    // Icon is 20px wide, so half that.
    margin-left: -10px;
  }
}
