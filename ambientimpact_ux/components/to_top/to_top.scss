// -----------------------------------------------------------------------------
//   Ambient.Impact - UX - To top component
// -----------------------------------------------------------------------------

@import 'sass/common';

///
/// To top component horizontal offset from viewport edge.
///
$to-top-offset-horizontal: 1em !default;

///
/// To top component bottom offset from viewport edge.
///
$to-top-offset-bottom: 2em !default;

///
/// To top component horizontal offset from viewport edge when hidden.
///
$to-top-hidden-offset: 4em !default;

///
/// To top component background colour on light backgrounds.
///
$to-top-background-colour-normal-on-light: lighten(black, 10%) !default;

///
/// To top component background colour on dark backgrounds.
///
$to-top-background-colour-normal-on-dark: darken(white, 10%) !default;

///
/// To top component interacted background colour on light backgrounds.
///
$to-top-background-colour-interact-on-light: lighten(black, 20%) !default;

///
/// To top component interacted background colour on dark backgrounds.
///
$to-top-background-colour-interact-on-dark: darken(white, 20%) !default;

///
/// To top component foreground colour on light backgrounds.
///
$to-top-foreground-colour-on-light: white !default;

///
/// To top component foreground colour on dark backgrounds.
///
$to-top-foreground-colour-on-dark: black !default;

.to-top {
  position: fixed;

  @include root-conditions(('[dir=ltr]'), 'html') {
    right:  $to-top-offset-horizontal;
  }
  @include root-conditions(('[dir=rtl]'), 'html') {
    left: $to-top-offset-horizontal;
  }

  bottom: $to-top-offset-bottom;

  @include z-index('floating');

  transition-property:        opacity, transform;
  transition-duration:        0.3s;
  transition-timing-function: $easing-sharp;

  &--hidden {
    opacity:  0;

    @include root-conditions(('[dir=ltr]'), 'html') {
      transform:  translateX($to-top-hidden-offset);
    }
    @include root-conditions(('[dir=rtl]'), 'html') {
      transform:  translateX(-$to-top-hidden-offset);
    }
  }

  &__link {
    display: block;

    color: $to-top-foreground-colour-on-light !important;

    @include material-button-fab(
      $background-colour:           $to-top-background-colour-normal-on-light,
      $background-colour-interact:  $to-top-background-colour-interact-on-light
    );

    @include on-dark-colour-scheme {
      color: $to-top-foreground-colour-on-dark !important;

      @include material-button-fab(
        $background-colour:           $to-top-background-colour-normal-on-dark,
        $background-colour-interact:  $to-top-background-colour-interact-on-dark
      );
    }

    // Make focus outline circular if the browser supports it.
    -moz-outline-radius:  50%;
    outline-radius:       50%;

    // Use the background colour for the focus outline to ensure contrast as the
    // outline uses currentColor by default, which is white in this case.
    &:focus {
      outline-color: $to-top-background-colour-normal-on-light;
    }
  }

  .ambientimpact-icon {
    // The icon is throwing off the x/y coordinates of the Material ripple, so
    // make it click-through.
    pointer-events: none;

    // Make sure the icon text is vertically aligned with the icon for if/when
    // we decide to make the text visible or the icon fails to load/hasn't
    // loaded yet. The selector is required for specificity over the default
    // icon styles.
    &:not(.ambientimpact-icon--icon-standalone-loaded) {
      @include set-icon-vertical-alignment(centre);
      @include set-icon-text-spacing($icon-text-spacing * 2);
      @include set-icon-display(block);
    }
  }
}

// Page top anchor.
#top {
  position: absolute;
  top:      0;
}
