// -----------------------------------------------------------------------------
//   Ambient.Impact - UX - Off-canvas panel component
// -----------------------------------------------------------------------------

@use 'material.common/material.panel' as material-panel;
@use 'material.common/material.shadow' as material-shadow;
@use 'sass/helpers/colour';
@use 'sass/helpers/z-index';
@use 'sass/variables/motion';

// This is taken from the Frend Off Canvas CSS and modified.
// @see https://github.com/frend/frend.co/blob/gh-pages/_components/offcanvas/offcanvas.css

///
/// Off-canvas panel transition duration.
///
$offcanvas-transition-duration: 0.3s;

///
/// Off-canvas panel padding.
///
$offcanvas-panel-padding: 0.5em;

///
/// Off-canvas panel maximum width or height from edge of viewport.
///
/// This is used as max-width if displayed on the left or right, and is used as
/// max-height if displayed at the top or bottom.
///
$offcanvas-panel-max-size: 17em;

.offcanvas-panel--is-ready {
  position: fixed !important;

  display: flex;

  flex-direction: column;

  // Remove the default focus outline on the panel as it can't be activated and
  // is outside of the tabbing order (tabindex="-1"), but is focused when the
  // panel opens in case the user does use keyboard navigation to focus one of
  // the elements in the panel, which do show focus outlines.
  &:focus {
    outline: none;
  }

  &.offcanvas-panel--left,
  &.offcanvas-panel--right {
    // This pulls the panel up past the viewport top a bit so that the shadow is
    // consistent all the way up as it's offset downwards.
    top:    -1em;
    bottom: 0;

    width:      100%;
    max-width:  $offcanvas-panel-max-size;

    padding-top:  1em;
  }
  &.offcanvas-panel--top,
  &.offcanvas-panel--bottom {
    left:   0;
    right:  0;

    height:     100%;
    max-height: $offcanvas-panel-max-size;
  }

  .offcanvas-panel__content,
  .offcanvas-panel__ui {
    padding-left:   $offcanvas-panel-padding;
    padding-right:  $offcanvas-panel-padding;

    box-sizing: border-box;
  }

  .offcanvas-panel__content {
    height:   100%;
    overflow: auto;

    // These provide top and bottom padding within the scrollable content
    // container.
    &::before,
    &::after {
      content:  '';

      display:  block;
    }

    // This is the top padding.
    &::before {
      height:   $offcanvas-panel-padding;
    }

    // This is the bottom padding. Note that we're adding roughly the vertical
    // height of the close button and the panel padding twice for the bottom and
    // top of the button space. This allows the bottom of the content to scroll
    // high enough so that the button clears it and doesn't obstruct anything.
    &::after {
      height:   ($offcanvas-panel-padding * 2) + 2.5em;
    }
  }

  .offcanvas-panel__ui {
    display: flex;

    // This right-aligns the button(s).
    //
    // @todo Left-handed mode?
    justify-content: flex-end;

    position: absolute;

    bottom: 0;

    width: 100%;

    padding-bottom: $offcanvas-panel-padding;

    // As this can overlay the content, make it click-through.
    pointer-events: none;

    > * {
      // Revert pointer-events on direct children, so they're clickable.
      pointer-events: auto;
    }
  }

  z-index:    1;

  &.offcanvas-panel--modal {
    // This places this over the overlay and most other page elements,
    // including the admin Toolbar.
    @include z-index.get('modal');
  }

  // Initially hidden. This prevents keyboard/script focus until the panel is
  // opened.
  visibility:   hidden;

  &.offcanvas-panel--is-active {
    visibility: visible;
  }

  transform:    translateX(0) translateY(0);
  will-change:  transform;

  // Don't transition transforms if the user indicates they prefer reduced
  // motion but use opacity instead.
  //
  // @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion
  @media (prefers-reduced-motion: reduce) {
    opacity: 1;
  }

  transition-property: transform, opacity, visibility;

  // These are used when transitioning into view, i.e. is opening. The panel
  // comes in at full speed and decelerates to a stop.
  transition-duration:        $offcanvas-transition-duration;
  transition-timing-function: motion.$easing-decelerate;

  // These are used when transitioning out of view, i.e. is closing. The panel
  // accelerates out to give it a sense of physicality and weight, as if this is
  // a real object subject to physics. The duration is shortened to compensate
  // for the different easing, making it feel similar in duration to the
  // transition in.
  &[aria-hidden="true"] {
    transition-duration:        $offcanvas-transition-duration * 0.7;
    transition-timing-function: motion.$easing-accelerate;
  }

  // Auto panel theme; switches between light and dark based on
  // prefers-colour-scheme media feature.
  &.offcanvas-panel--theme-auto {
    @include colour.set(
      $background: material-panel.$background-colour-light
    );

    @include colour.on-dark-scheme {
      @include colour.set(
        $background: material-panel.$background-colour-dark
      );
    }
  }
  // Light panel theme.
  &.offcanvas-panel--theme-light {
    @include colour.set(
      $background: material-panel.$background-colour-light
    );
  }
  // Dark panel theme.
  &.offcanvas-panel--theme-dark {
    @include colour.set(
      $background: material-panel.$background-colour-dark
    );
  }

  @include material-shadow.shadow(3);

  &.offcanvas-panel--left {
    left:   0;

    &[aria-hidden="true"] {
      transform: translateX(-100%);
    }
  }
  &.offcanvas-panel--right {
    right:    0;

    &[aria-hidden="true"] {
      transform: translateX(100%);
    }
  }
  &.offcanvas-panel--top {
    top: 0;

    &[aria-hidden="true"] {
      transform: translateY(-100%);
    }
  }
  &.offcanvas-panel--bottom {
    bottom: 0;

    &[aria-hidden="true"] {
      transform: translateY(100%);
    }
  }

  // Don't transition transforms if the user indicates they prefer reduced
  // motion but use opacity instead.
  //
  // @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion
  @media (prefers-reduced-motion: reduce) {
    &.offcanvas-panel--left,
    &.offcanvas-panel--right,
    &.offcanvas-panel--top,
    &.offcanvas-panel--bottom {
      &, &[aria-hidden="true"] {
        // Opacity transitions look much smoother with linear easing.
        transition-timing-function: linear;
      }

      &[aria-hidden="true"] {
        transform:  translateX(0) translateY(0);
        opacity:    0;
      }
    }
  }
}
