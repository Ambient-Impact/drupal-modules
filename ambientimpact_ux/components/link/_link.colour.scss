// -----------------------------------------------------------------------------
//   Ambient.Impact - UX - Link component colour partial
// -----------------------------------------------------------------------------

@use 'sass:color';
@use 'sass:map';
@use 'sass:meta';

///
/// Get the active link colour for a given base colour.
///
/// This function is used to automatically generate link active colours if no
/// such colours are explicitly defined.
///
/// @param {Color} $base-colour
///   The colour to modify and return as the active colour. This is usually the
///   highlighted colour of the link. This is ignored if $active-colour is not
///   auto.
///
/// @param {String|Color} $active-colour [auto]
///   If this is auto, the active colour is generated by modifying $base-colour.
///   If the function get-link-active-colour-callback() exists, it will be
///   passed the base colour; if it doesn't exist, $base-colour is run through
///   transparentize() with $transparentize-amount as the second parameter.
///
/// @param {Number} $transparentize-amount [0.4]
///   The amount to transparentize() $base-colour by, if the
///   get-link-active-colour-callback() function doesn't exist and
///   $active-colour is auto.
///
/// @see {function} get-link-colours
///   Used here.
///
@function get-link-active-colour(
  $base-colour,
  $active-colour: auto,
  $transparentize-amount: 0.4
) {
  @if $active-colour == auto {
    @if meta.function-exists('get-link-active-colour-callback') {
      @return meta.call(
        meta.get-function('get-link-active-colour-callback'), $base-colour
      );
    } @else {
      @return color.adjust($base-colour, $alpha: -$transparentize-amount);
    }
  } @else {
    @return $active-colour;
  }
}

///
/// Set link colour properties based on background colour.
///
/// @param {Color} $background [$background-colour]
///   The background colour the link is on.
///
/// @param {Color} $normal-on-light [$link-normal-colour-on-light]
///   Link colour on light backgrounds when not hovered/activated.
///
/// @param {Color} $hover-on-light [$link-hover-colour-on-light]
///   Link colour on light backgrounds when hovered/focused.
///
/// @param {Color} $active-on-light [$link-active-colour-on-light]
///   Link colour on light backgrounds when activated.
///
/// @param {Color} $underline-normal-on-light [$link-underline-normal-colour-on-light]
///   Link underline colour on light backgrounds when not hovered/activated.
///
/// @param {Color} $underline-hover-on-light [$link-underline-hover-colour-on-light]
///   Link underline colour on light backgrounds when hovered/focused.
///
/// @param {Color} $underline-active-on-light [$link-underline-active-colour-on-light]
///   Link underline colour on light backgrounds when activated.
///
/// @param {Color} $normal-on-dark [$link-normal-colour-on-dark]
///   Link colour on dark backgrounds when not highdarked/activated.
///
/// @param {Color} $hover-on-dark [$link-hover-colour-on-dark]
///   Link colour on dark backgrounds when hovered/focused.
///
/// @param {Color} $active-on-dark [$link-active-colour-on-dark]
///   Link colour on dark backgrounds when activated.
///
/// @param {Color} $underline-normal-on-dark [$link-underline-normal-colour-on-dark]
///   Link underline colour on dark backgrounds when not highdarked/activated.
///
/// @param {Color} $underline-hover-on-dark [$link-underline-hover-colour-on-dark]
///   Link underline colour on dark backgrounds when hovered/focused.
///
/// @param {Color} $underline-active-on-dark [$link-underline-active-colour-on-dark]
///   Link underline colour on dark backgrounds when activated.
///
/// @require {function} get-link-colours
/// @require {mixin}    link-colour-custom-properties
/// @require {function} custom-property
///
@mixin link-colours(
  $background:                $background-colour,

  $normal-on-light:           $link-normal-colour-on-light,
  $hover-on-light:            $link-hover-colour-on-light,
  $active-on-light:           $link-active-colour-on-light,

  $underline-normal-on-light: $link-underline-normal-colour-on-light,
  $underline-hover-on-light:  $link-underline-hover-colour-on-light,
  $underline-active-on-light: $link-underline-active-colour-on-light,

  $normal-on-dark:            $link-normal-colour-on-dark,
  $hover-on-dark:             $link-hover-colour-on-dark,
  $active-on-dark:            $link-active-colour-on-dark,

  $underline-normal-on-dark:  $link-underline-normal-colour-on-dark,
  $underline-hover-on-dark:   $link-underline-hover-colour-on-dark,
  $underline-active-on-dark:  $link-underline-active-colour-on-dark
) {
  $colours: get-link-colours(
    $background,

    $normal-on-light,
    $hover-on-light,
    $active-on-light,

    $underline-normal-on-light,
    $underline-hover-on-light,
    $underline-active-on-light,

    $normal-on-dark,
    $hover-on-dark,
    $active-on-dark,

    $underline-normal-on-dark,
    $underline-hover-on-dark,
    $underline-active-on-dark
  );

  @include link-colour-custom-properties($background, $colours);

  color: var(--link-normal-colour, map.get($colours, normal));

  text-decoration-color: var(
    --link-underline-normal-colour,
    #{map.get($colours, underline-normal)}
  );

  @include link-hover {

    color: var(--link-hover-colour, map.get($colours, hover));

    text-decoration-color: var(
      --link-underline-hover-colour,
      #{map.get($colours, underline-hover)}
    );

  }
  @include link-active {

    color: var(--link-active-colour, map.get($colours, active)) !important;

    text-decoration-color: var(
      --link-underline-active-colour,
      #{map.get($colours, underline-active)}
    );

  }
}

///
/// Get link colour values based on background colour.
///
/// @param {Color} $background [$background-colour]
///   The background colour the link is on.
///
/// @param {Color} $normal-on-light [$link-normal-colour-on-light]
///   Link colour on light backgrounds when not hovered/activated.
///
/// @param {Color} $hover-on-light [$link-hover-colour-on-light]
///   Link colour on light backgrounds when hovered/focused.
///
/// @param {Color} $active-on-light [$link-active-colour-on-light]
///   Link colour on light backgrounds when activated.
///
/// @param {Color} $underline-normal-on-light [$link-underline-normal-colour-on-light]
///   Link underline colour on light backgrounds when not hovered/activated.
///
/// @param {Color} $underline-hover-on-light [$link-underline-hover-colour-on-light]
///   Link underline colour on light backgrounds when hovered/focused.
///
/// @param {Color} $underline-active-on-light [$link-underline-active-colour-on-light]
///   Link underline colour on light backgrounds when activated.
///
/// @param {Color} $normal-on-dark [$link-normal-colour-on-dark]
///   Link colour on dark backgrounds when not highdarked/activated.
///
/// @param {Color} $hover-on-dark [$link-hover-colour-on-dark]
///   Link colour on dark backgrounds when hovered/focused.
///
/// @param {Color} $active-on-dark [$link-active-colour-on-dark]
///   Link colour on dark backgrounds when activated.
///
/// @param {Color} $underline-normal-on-dark [$link-underline-normal-colour-on-dark]
///   Link underline colour on dark backgrounds when not highdarked/activated.
///
/// @param {Color} $underline-hover-on-dark [$link-underline-hover-colour-on-dark]
///   Link underline colour on dark backgrounds when hovered/focused.
///
/// @param {Color} $underline-active-on-dark [$link-underline-active-colour-on-dark]
///   Link underline colour on dark backgrounds when activated.
///
/// @return {Map}
///   A map of link and link underline colours for normal, hovered, and active
///   states.
///
/// @require {function} get-contrasting-colour
/// @require {function} get-link-active-colour
///
@function get-link-colours(
  $background:                $background-colour,

  $normal-on-light:           $link-normal-colour-on-light,
  $hover-on-light:            $link-hover-colour-on-light,
  $active-on-light:           $link-active-colour-on-light,

  $underline-normal-on-light: $link-underline-normal-colour-on-light,
  $underline-hover-on-light:  $link-underline-hover-colour-on-light,
  $underline-active-on-light: $link-underline-active-colour-on-light,

  $normal-on-dark:            $link-normal-colour-on-dark,
  $hover-on-dark:             $link-hover-colour-on-dark,
  $active-on-dark:            $link-active-colour-on-dark,

  $underline-normal-on-dark:  $link-underline-normal-colour-on-dark,
  $underline-hover-on-dark:   $link-underline-hover-colour-on-dark,
  $underline-active-on-dark:  $link-underline-active-colour-on-dark
) {
  $colours: ();

  $contrasting-colour: get-contrasting-colour(
    $background:          $background,
    $foreground-on-light: $normal-on-light,
    $foreground-on-dark:  $normal-on-dark
  );

  @if ($contrasting-colour == $normal-on-light) {
    $colours: (
      normal:           $normal-on-light,
      hover:            $hover-on-light,
      active:           get-link-active-colour(
        $hover-on-light, $active-on-light
      ),

      underline-normal: $underline-normal-on-light,
      underline-hover:  $underline-hover-on-light,
      underline-active: get-link-active-colour(
        $underline-hover-on-light, $underline-active-on-light
      )
    );

  } @else if ($contrasting-colour == $normal-on-dark) {
    $colours: (
      normal:           $normal-on-dark,
      hover:            $hover-on-dark,
      active:           get-link-active-colour($hover-on-dark, $active-on-dark),

      underline-normal: $underline-normal-on-dark,
      underline-hover:  $underline-hover-on-dark,
      underline-active: get-link-active-colour(
        $underline-hover-on-dark, $underline-active-on-dark
      )
    );
  }

  @return $colours;
}
