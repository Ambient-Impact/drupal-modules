// -----------------------------------------------------------------------------
//   Ambient.Impact - UX - Material Design button partial
// -----------------------------------------------------------------------------

// Note that implementing buttons as <button> elements in Drupal 8 is more
// challenging than in Drupal 7, so parts of the following mixins have been
// commented out where they assume a <button> and its support of ::before and
// ::after, which <input> elements do not support. There is an ongoing issue
// with attempts to do this in core, but it seems to have stalled as of March
// 2019.
// @see https://www.drupal.org/project/drupal/issues/1671190

///
/// Material button background colour, light variant.
///
$material-button-background-colour-light:
  darken($material-panel-background-colour-light, 10%)  !default;

///
/// Material button background colour, light variant, with user interaction.
///
$material-button-background-colour-light-interact:
  darken($material-button-background-colour-light, 10%) !default;

///
/// Material button background colour, dark variant.
///
$material-button-background-colour-dark:
  lighten($material-panel-background-colour-dark, 10%)  !default;

///
/// Material button background colour, dark variant, with user interaction.
///
$material-button-background-colour-dark-interact:
  lighten($material-button-background-colour-dark, 10%) !default;

///
/// Material button background colour, light variant, with user interaction.
///
$material-button-background-colour-light-interact:
  darken($material-button-background-colour-light, 10%) !default;

///
/// Material button foreground colour when button background colour is light.
///
$material-button-foreground-colour-on-light:
  $foreground-colour-on-light               !default;

///
/// Material button foreground colour when button background colour is dark.
///
$material-button-foreground-colour-on-dark:
  $foreground-colour-on-dark                !default;

///
/// Material button padding.
///
/// These specific values allow us to vertically centre text. They work in
/// concert with the button's line-height value to do this.
///
$material-button-padding: 0.7em 1em 0.6em         !default;

///
/// Material button border radius.
///
$material-button-border-radius: $material-border-radius   !default;


///
/// Styles to present an element as a Material button.
///
/// @param {Color} $background-colour [$material-button-background-colour-light]
///   The background colour for the button.
///
/// @param {Color} $background-colour-interact
///   [$material-button-background-colour-light-interact]
///   The background colour for the button when the user is interacting with it.
///
/// @param {null|Color} $background-colour-reference [null]
///   The background colour reference to pass to set-colours() if
///   $background-colour is transparent, inherit, etc.
///
/// @param {null|Color} $background-colour-interact-reference [null]
///   The background colour reference (when user is interacting with the button)
///   to pass to set-colours() if $background-colour is transparent, inherit,
///   etc.
///
/// @param {Color} $foreground-colour-on-light [$foreground-colour-on-light]
///   The foreground colour to use if the background colour is considered to be
///   more dark than light.
///
/// @param {Color} $foreground-colour-on-dark [$foreground-colour-on-dark]
///   The foreground colour to use if the background colour is considered to be
///   more light than dark.
///
/// @param {Number} $shadow-depth [1]
///   The shadow depth to pass to mixin material-shadow.
///
/// @param {Number} $border-radius [$material-button-border-radius]
///   The border radius to use for this button.
///
/// @see {mixin} material-button-interact
/// @see {mixin} material-button-shadow
/// @see {mixin} not-pointer-focus
/// @see {mixin} set-colours
/// @see {mixin} transition-fade-base
///
/// @author Matei "Ambient.Impact" Stanca
///
@mixin material-button(
  $background-colour:       $material-button-background-colour-light,
  $background-colour-interact:
    $material-button-background-colour-light-interact,
  $background-colour-reference:     null,
  $background-colour-interact-reference:  null,

  $foreground-colour-on-light:  $foreground-colour-on-light,
  $foreground-colour-on-dark:   $foreground-colour-on-dark,

  $shadow-depth:          1,

  $border-radius:         $material-button-border-radius
) {
  position: relative;
  z-index:  1;

  padding:  $material-button-padding;

  border:       0;
  &,
  // &::before,
  // &::after,
  .material-ripple {
    border-radius:  $border-radius;
  }

  @include set-colours(
    $background:      $background-colour,
    $background-reference:  $background-colour-reference,
    $foreground-on-light: $foreground-colour-on-light,
    $foreground-on-dark:  $foreground-colour-on-dark
  );

  // Only add a shadow if the depth is a valid value. This allows for passing
  // anything else to disable the shadow.
  @if $shadow-depth >= 1 and $shadow-depth <= 5 {
    // @include material-button-shadow($shadow-depth);
    @include material-shadow($shadow-depth);
  }

  @include transition-fade-base();

  text-transform: uppercase;
  font-weight:  bold;
  // Line height is set to this in an attempt to vertically centre text. It
  // works in concert with the vertical padding values to do so.
  line-height:  1.2;

  // &::before,
  // &::after {
  //   content:  '';

  //   display:  block;

  //   position: absolute;

  //   top:    0;
  //   left:   0;

  //   width:    100%;
  //   height:   100%;

  //   margin:   0;
  //   padding:  0;

  //   z-index:  -1;

  //   @include transition-fade-base();
  // }

  // Apply hover/focus styles on hover, if hover styles are allowed.
  @include yep('ambientimpact-global-hover') {
    &:not(:disabled):hover {
      @include material-button-interact(
        $background-colour-interact,
        $foreground-colour-on-light,
        $foreground-colour-on-dark,
        $background-colour-interact-reference
      );
    }
  }
  // Apply hover/focus styles on non-pointer focus.
  @include not-pointer-focus {
    &:not(:disabled) {
      @include material-button-interact(
        $background-colour-interact,
        $foreground-colour-on-light,
        $foreground-colour-on-dark,
        $background-colour-interact-reference
      );
    }
  }
  // Disabled buttons get faded out foreground colours.
  &:disabled {
    color: rgba($foreground-colour, 0.3);
    @include set-colours(
      $background:
        $background-colour,
      $foreground-on-light:
        transparentize($foreground-colour-on-light, 0.7),
      $foreground-on-dark:
        transparentize($foreground-colour-on-dark,  0.7)
    );
  }
}

///
/// Interaction (hover/focus) styles for a Material button.
///
/// @param {Color} $background-colour
///   The colour used for the button background.
///
/// @param {Color} $foreground-colour-on-light
///   The colour used for button text and other foreground elements when the
///   background colour is dark.
///
/// @param {Color} $foreground-colour-on-dark
///   The colour used for button text and other foreground elements when the
///   background colour is light.
///
/// @param {null|Color} $background-colour-reference [null]
///   The background colour reference to pass to set-colours() if
///   $background-colour is transparent, inherit, etc.
///
/// @see {mixin} set-colours
/// @see {mixin} transition-fade-active
///
@mixin material-button-interact(
  $background-colour,
  $foreground-colour-on-light,
  $foreground-colour-on-dark,
  $background-colour-reference: null
) {
  // In addition to requiring the colours here to be passed explicitly, this
  // overrides the colour of links masquerading as buttons.
  @include set-colours(
    $background:      $background-colour,
    $background-reference:  $background-colour-reference,
    $foreground-on-light: $foreground-colour-on-light,
    $foreground-on-dark:  $foreground-colour-on-dark
  );

  &,
  &::before,
  &::after {
    @include transition-fade-active();
  }
}

///
/// Material button shadows.
///
/// This is adapted from the CodePen by Stoikerty which is linked.
///
/// @param {Number} $shadow-depth
///   The shadow depth to pass to Material shadow mixins.
///
/// @see {mixin} material-shadow-top
/// @see {mixin} material-shadow-bottom
/// @see {mixin} material-shadow-top-opacity
/// @see {mixin} material-shadow-bottom-opacity
///
/// @author Matei "Ambient.Impact" Stanca
/// @author Stoikerty
///
/// @link http://codepen.io/stoikerty/pen/Glwxi
///
@mixin material-button-shadow($depth) {
  @if $depth < 1 or $depth > 5 {
    @warn "Invalid $depth `#{$depth}` for mixin `material-button-shadow`.";
  } @else {
    $depth-map: sl-replace-nth(0 0 0 0 0, $depth, 1);

    // Top shadow
    &::before {
      opacity: material-shadow-top-opacity($depth);

      $shadow: ();
      @for $i from 1 through 5 {
        $shadow: append(
          $shadow,
          material-shadow-top($i, nth($depth-map, $i)),
          comma
        );
      }
      box-shadow: $shadow;
    }

    // Bottom shadow
    &::after {
      opacity: material-shadow-bottom-opacity($depth);

      $shadow: ();
      @for $i from 1 through 5 {
        $shadow: append(
          $shadow,
          material-shadow-bottom($i, nth($depth-map, $i)),
          comma
        );
      }
      box-shadow: $shadow;
    }
  }
}

///
/// Material floating action button.
///
/// This styles an element as a Material button, with a deeper shadow and fully
/// rounded corner. If a standalone (square) icon is used, this button will be
/// perfectly circular.
///
/// @param {Color} $background-colour [$material-button-background-colour-light]
///   The background colour for the button.
///
/// @param {Color} $background-colour-interact
///   [$material-button-background-colour-light-interact]
///   The background colour for the button when the user is interacting with it.
///
/// @param {Number} $icon-size [$icon-size]
///   The width and height to set on the icon, if any.
///
/// @param {Number} $padding [$icon-size * 0.9]
///   The padding for the button.
///
/// @see {mixin} material-button
/// @see {variable} $icon-size
/// @see {mixin} set-icon-size
///
/// @author Matei "Ambient.Impact" Stanca
///
@mixin material-button-fab(
  $background-colour:       $material-button-background-colour,
  $background-colour-interact:  $material-button-background-colour-interact,
  $icon-size:           $icon-size,
  $padding:           $icon-size * 0.9
) {
  // The border radius is exactly half the icon size plus padding. This allows
  // buttons to be rounded rectangles if the contents do not fit inside a
  // perfect circle, which is preferable to just setting a fixed size and
  // having the content overflow.
  $border-radius: ($icon-size + ($padding * 2)) / 2;

  @include material-button(
    $background-colour:       $background-colour,
    $background-colour-interact:  $background-colour-interact,
    $shadow-depth:          2,
    $border-radius:         $border-radius
  );

  padding: $padding;

  .ambientimpact-icon {
    @include set-icon-size($icon-size);
  }
}
