// -----------------------------------------------------------------------------
//   Ambient.Impact - UX - Material panel partial
// -----------------------------------------------------------------------------

@use 'material.common/material.colour' as material-colour;
@use 'material.common/material.general' as material-general;
@use 'material.common/material.shadow' as material-shadow;
@use 'sass:color';
@use 'sass/helpers/breakpoint';
@use 'sass/helpers/colour';

///
/// Material panel background colour, light variant.
///
$background-colour-light: colour.$background-colour-light !default;

///
/// Material panel background colour, light on light variant.
///
/// This is mixed with the foreground colour a bit to give it some contrast
/// against a light background, if needed.
///
$background-colour-light-on-light: color.mix(
  colour.$background-colour-light, colour.$foreground-colour-on-light, 90%
) !default;

///
/// Material panel background colour, dark variant.
///
$background-colour-dark: colour.$background-colour-dark !default;

///
/// Material panel background colour, dark on dark variant.
///
/// This is mixed with the foreground colour a bit to give it some contrast
/// against a dark background, if needed.
///
$background-colour-dark-on-dark: color.mix(
  colour.$background-colour-dark, colour.$foreground-colour-on-dark, 90%
) !default;

///
/// Material panel background colour.
///
/// @deprecated This is here for legacy purposes to not break stuff. Use the
/// light and dark variables instead.
///
/// @see {variable} $background-colour-light
/// @see {variable} $background-colour-dark
///
$colour: $background-colour-light !default;

///
/// Material panel default padding, small.
///
/// @see {mixin} padding
///
$padding-small: 1.5rem !default;

///
/// Material panel default padding, large.
///
/// @see {mixin} padding
///
$padding-large: 3rem !default;

///
/// Material panel default padding breakpoint.
///
/// This is the name and @include breakpoint.on() operator used by default in
/// the padding mixin to switch between the small and large
/// padding values.
///
/// @see {mixin} padding
///
$padding-breakpoint: '>=padding' !default;

///
/// Material panel divider colour.
///
/// @see {mixin} divider
///
$divider-colour: material-colour.$line !default;

///
/// Material panel divider thickness.
///
/// @see {mixin} divider
///
$divider-thickness: 1px !default;

///
/// Material panel divider padding multiplier.
///
/// This is used to scale the padding on either side of the divider relative to
/// the overall panel padding. The default value of 0.3 means it will use 30%
/// of the panel padding values.
///
/// @see {mixin} divider
///
$divider-padding-multiplier: 0.3 !default;

@include breakpoint.add((
  // The viewport width where Material panels switch between their small and
  // large padding values.
  'padding': 30em
));

///
/// Styles to present an element as a Material panel/card.
///
/// This sets background/foreground colours, padding, box-shadow, and
/// border-radius.
///
/// @param {Number} $padding-small [$padding-small]
///   The padding to use if the breakpoint named in the $padding-breakpoint
///   parameter *hasn't* been exceeded.
///
/// @param {Number} $padding-large [$padding-large]
///   The padding to use if the breakpoint named in the $padding-breakpoint
///   parameter *has* been exceeded.
///
/// @param {String} $padding-breakpoint [$padding-breakpoint]
///   The breakpoint to switch from small to large padding.
///
/// @param {Color} $background-colour [$background-colour-light]
///   The background colour for the panel.
///
/// @param {Color} $foreground-colour-on-light [$foreground-colour-on-light]
///   The foreground colour to use if the background colour is considered to be
///   more dark than light.
///
/// @param {Color} $foreground-colour-on-dark [$foreground-colour-on-dark]
///   The foreground colour to use if the background colour is considered to be
///   more light than dark.
///
/// @param {Number} $shadow-depth [2]
///   The shadow depth to pass to the material-shadow mixin.
///
/// @require {mixin} padding
/// @require {mixin} material-shadow
/// @require {variable} material-general.$border-radius
/// @require {variable} $padding-small
/// @require {variable} $padding-large
/// @require {variable} $padding-breakpoint
/// @require {variable} $background-colour-light
/// @require {variable} $foreground-colour-on-light
/// @require {variable} $foreground-colour-on-dark
///
@mixin panel(
  $padding-small:               $padding-small,
  $padding-large:               $padding-large,
  $padding-breakpoint:          $padding-breakpoint,
  $background-colour:           $background-colour-light,
  $foreground-colour-on-light:  colour.$foreground-colour-on-light,
  $foreground-colour-on-dark:   colour.$foreground-colour-on-dark,
  $shadow-depth:                2
) {
  @include padding(
    $padding-small:       $padding-small,
    $padding-large:       $padding-large,
    $padding-breakpoint:  $padding-breakpoint
  );

  border-radius: material-general.$border-radius;

  @include colour.set-colours(
    $background:          $background-colour,
    $foreground-on-light: $foreground-colour-on-light,
    $foreground-on-dark:  $foreground-colour-on-dark
  );

  @include material-shadow.material-shadow($shadow-depth);
}

///
/// Sets the padding on a Material panel/card.
///
/// This sets padding based on the axis/axes specified and will switch to the
/// larger padding value once the given breakpoint is reached.
///
/// @param {Number} $padding-small [$padding-small]
///   The padding to use if the breakpoint named in the $padding-breakpoint
///   parameter *hasn't* been exceeded.
///
/// @param {Number} $padding-large [$padding-large]
///   The padding to use if the breakpoint named in the $padding-breakpoint
///   parameter *has* been exceeded.
///
/// @param {String} $padding-breakpoint [$padding-breakpoint]
///   The breakpoint to switch from small to large padding.
///
/// @param {String} $padding-axis ['both']
///   The axis/axes to apply padding to. Valid values are 'horizontal',
///   'vertical', and 'both'.
///
/// @require {mixin} breakpoint.on
/// @require {variable} $padding-small
/// @require {variable} $padding-large
/// @require {variable} $padding-breakpoint
///
@mixin padding(
  $padding-small:       $padding-small,
  $padding-large:       $padding-large,
  $padding-breakpoint:  $padding-breakpoint,
  $padding-axis:        'both'
) {
  // Horizontal padding.
  @if $padding-axis == 'horizontal' {
    padding-left:   $padding-small;
    padding-right:  $padding-small;

  // Vertical padding.
  } @else if $padding-axis == 'vertical' {
    padding-top:    $padding-small;
    padding-bottom: $padding-small;

  // Both axes padding.
  } @else {
    padding: $padding-small;
  }

  // Switch to large padding on the provided breakpoint if the small and large
  // padding values are not identical.
  @if $padding-small != $padding-large {
    @include breakpoint.on($padding-breakpoint) {
      // Horizontal padding.
      @if $padding-axis == 'horizontal' {
        padding-left:   $padding-large;
        padding-right:  $padding-large;

      // Vertical padding.
      } @else if $padding-axis == 'vertical' {
        padding-top:    $padding-large;
        padding-bottom: $padding-large;

      // Both axes padding.
      } @else {
        padding: $padding-large;
      }
    }
  }
}

///
/// Style an element as a Material panel divider.
///
/// @param {Color} $colour [$divider-colour]
///   The divider colour.
///
/// @param {Number} $thickness [$divider-thickness]
///   The divider thickness.
///
/// @param {Number} $padding-small [$padding-small]
///   The padding to use if the breakpoint named in the $padding-breakpoint
///   parameter *hasn't* been exceeded.
///
/// @param {Number} $padding-large [$padding-large]
///   The padding to use if the breakpoint named in the $padding-breakpoint
///   parameter *has* been exceeded.
///
/// @param {String} $padding-breakpoint [$padding-breakpoint]
///   The breakpoint to switch from small to large padding.
///
/// @param {Number} $padding-multiplier [$divider-padding-multiplier]
///   The multiplier to use to scale the padding values up or down. By default,
///   this shrinks the panel padding values.
///
/// @require {mixin} breakpoint.on
/// @require {variable} $divider-colour
/// @require {variable} $divider-thickness
/// @require {variable} $padding-small
/// @require {variable} $padding-large
/// @require {variable} $padding-breakpoint
/// @require {variable} $divider-padding-multiplier
///
@mixin divider(
  $colour:              $divider-colour,
  $thickness:           $divider-thickness,
  $padding-small:       $padding-small,
  $padding-large:       $padding-large,
  $padding-breakpoint:  $padding-breakpoint,
  $padding-multiplier:  $divider-padding-multiplier
) {
  height: $thickness;

  margin: ($padding-small * $padding-multiplier) (-$padding-small);

  @include breakpoint.on($padding-breakpoint) {
    margin: ($padding-large * $padding-multiplier) (-$padding-large);
  }

  background-color: $colour;
}

///
/// Style an element as a Material panel footer.
///
/// @param {Number} $padding-small [$padding-small]
///   The padding to use if the breakpoint named in the $padding-breakpoint
///   parameter *hasn't* been exceeded.
///
/// @param {Number} $padding-large [$padding-large]
///   The padding to use if the breakpoint named in the $padding-breakpoint
///   parameter *has* been exceeded.
///
/// @param {String} $padding-breakpoint [$padding-breakpoint]
///   The breakpoint to switch from small to large padding.
///
/// @param {Number} $padding-multiplier [$divider-padding-multiplier]
///   The multiplier to use to scale the padding values up or down. By default,
///   this shrinks the panel padding values.
///
/// @require {mixin} breakpoint.on
/// @require {mixin} divider
/// @require {variable} $padding-small
/// @require {variable} $padding-large
/// @require {variable} $padding-breakpoint
/// @require {variable} $divider-padding-multiplier
///
@mixin footer(
  $padding-small:       $padding-small,
  $padding-large:       $padding-large,
  $padding-breakpoint:  $padding-breakpoint,
  $padding-multiplier:  $divider-padding-multiplier
) {
  margin-top:     $padding-small;
  margin-bottom:  -$padding-small;
  padding-bottom: ($padding-small * $padding-multiplier);

  @if $padding-small != $padding-large {
    @include breakpoint.on($padding-breakpoint) {
      margin-top:     $padding-large;
      margin-bottom:  -$padding-large;
      padding-bottom: ($padding-large * $padding-multiplier);
    }
  }

  // This is the divider between the footer and any preceding content.
  &::before {
    content: '';

    display: block;

    @include divider(
      $padding-small:       $padding-small,
      $padding-large:       $padding-large,
      $padding-breakpoint:  $padding-breakpoint,
      $padding-multiplier:  $padding-multiplier
    );
  }
}
