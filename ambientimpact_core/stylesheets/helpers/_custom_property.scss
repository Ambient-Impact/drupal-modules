// -----------------------------------------------------------------------------
//  CSS Custom Property helpers
// -----------------------------------------------------------------------------

@use 'sass:string';

///
/// Declare a CSS Custom Property.
///
/// @param {String} $name
///   The name of the custom property.
///
/// @param {Mixed} $value
///   The value to set the custom property to.
///
@mixin custom-property($name, $value) {
  #{string.unquote('--#{$name}')}: $value;
}

///
/// Declare a CSS Custom Property.
///
/// @param {String} $name
///   The name of the custom property.
///
/// @param {Mixed} $value
///   The value to set the custom property to.
///
/// @deprecated Use @include custom-property() instead.
///
/// @see {mixin} custom-property
///
@mixin declare-custom-property($name, $value) {
  @warn 'Mixin declare-custom-property() is deprecated, please use custom-property() instead.';

  @include custom-property($name, $value);
}

///
/// Use a CSS Custom Property as a value, with optional fallback.
///
/// @param {String} $name
///   The name of the custom property.
///
/// @param {Mixed} $fallback [null]
///   The fallback value to use if the property is not defined. Note that this
///   still requires the browser to support custom properties. For fallbacks for
///   browsers that don't support them, first define the non-custom property
///   fallback, then make the same declaration with the custom property after,
///   so the latter is used in browsers that do support them.
///
/// @return {String}
///   The value as a string containing the var() and its content.
///
/// @link https://ambientimpact.com/web/snippets/css-custom-property-fallbacks
///
@function custom-property($name, $fallback: null) {
  @if $fallback != null {
    @return #{'var(--#{$name}, #{$fallback})'};
  } @else {
    @return #{'var(--#{$name})'};
  }
}

///
/// Use a CSS Custom Property as a value.
///
/// @param {String} $name
///   The name of the custom property.
///
/// @deprecated Use custom-property() instead.
///
/// @see {function} custom-property
///
@function get-custom-property-value($name) {
  @warn 'Function get-custom-property-value() is deprecated, please use custom-property() instead.';

  @return custom-property($name);
}
